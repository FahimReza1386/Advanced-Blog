services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    
  db:
    container_name: db
    image: postgres:18-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432"

  backend:
    container_name: blog
    build:
      context: .
      dockerfile: dockerfile/dev/Dockerfile
    restart: always
    volumes:
      - ./core:/usr/src/app
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000

    environment:
      - DEBUG=True

    depends_on:
      - db
      - redis

  celery:
    container_name: celery_worker
    build:
      context: .
      dockerfile: dockerfile/dev/Dockerfile
    volumes:
      - ./core:/usr/src/app
    command: celery -A core worker --loglevel=info
    depends_on:
      - db
      - redis
      - backend

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - '5000:80'
      - '25:25'
      - '143:143'

    volumes:
      - smtp4dev-data:/smtp4dev

    environment:
      - ServerOptions_HostName=smtp4dev

    depends_on:
      - db
      - redis
      - backend


volumes:
  postgres_data:
  smtp4dev-data: